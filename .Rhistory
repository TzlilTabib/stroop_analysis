rm(list = ls())
library(tidyr)
library(dplyr)
library(readxl)
library(writexl)
library(effectsize)
library(ggplot2)
# Combining data
cohort_1 <- read_excel('./cohort_1_long_NoOutliers.xlsx')
library(dplyr)
library(ggplot2)
library(ggdist)
library(lme4)
load('./filtered_data.rdata')
# R course for beginners
# Week 7 part 1
# Assignment by Tzlil Tabib, id 208744755
library(dplyr)
### PREPARING RAW DATA FROM COLLECTED DATA -------------------------------------
# Combining subjects' files to one data frame
files_names <- dir("stroop_data", full.names = TRUE)
df <- data.frame()
for (file in files_names) {
temp_data <- read.csv(file)
df <- rbind(df, temp_data)}
# Organizing data
df <- df |>
mutate(
task        = ifelse(grepl("word_reading", condition), "word_reading", "ink_naming"),
congruency  = ifelse(grepl("incong", condition), "incong", "cong"),
accuracy    = as.numeric(correct_response == participant_response)) |>
select(subject, task, congruency, block, trial, accuracy, rt) |>
mutate(
subject        = as.factor(subject),
task           = factor(task, levels = c("word_reading", "ink_naming"), ordered = TRUE),
congruency     = factor(congruency, levels = c("cong", "incong"), ordered = TRUE),
accuracy       = factor(accuracy, levels = c(0, 1), labels = c("inaccurate", "accurate")),
block          = as.factor(block),
trial          = as.numeric(trial),
rt             = as.numeric(rt))
setwd("C:/Users/tzlil/OneDrive/Documents/Masters/קורסים/היכרות עם R/Projects/week 7")
# R course for beginners
# Week 7 part 1
# Assignment by Tzlil Tabib, id 208744755
library(dplyr)
### PREPARING RAW DATA FROM COLLECTED DATA -------------------------------------
# Combining subjects' files to one data frame
files_names <- dir("stroop_data", full.names = TRUE)
df <- data.frame()
for (file in files_names) {
temp_data <- read.csv(file)
df <- rbind(df, temp_data)}
# Organizing data
df <- df |>
mutate(
task        = ifelse(grepl("word_reading", condition), "word_reading", "ink_naming"),
congruency  = ifelse(grepl("incong", condition), "incong", "cong"),
accuracy    = as.numeric(correct_response == participant_response)) |>
select(subject, task, congruency, block, trial, accuracy, rt) |>
mutate(
subject        = as.factor(subject),
task           = factor(task, levels = c("word_reading", "ink_naming"), ordered = TRUE),
congruency     = factor(congruency, levels = c("cong", "incong"), ordered = TRUE),
accuracy       = factor(accuracy, levels = c(0, 1), labels = c("inaccurate", "accurate")),
block          = as.factor(block),
trial          = as.numeric(trial),
rt             = as.numeric(rt))
# Saving raw data
save(df, file = './raw_data.rdata')
# R course for beginners
# Week 7 part 2
# Assignment by Tzlil Tabib, id 208744755
library(dplyr)
load('./raw_data.rdata')
# Counting subjects
N = n_distinct(df$subject)
print(paste("N =", N , "subjects"))
### PREPARING FILTERED DATA ----------------------------------------------------
# calculation total number of trials per subject
total_trials <- df |>
group_by(subject) |>
summarize(total_trials = n())
# Excluding NA trials and (rt < 300 or rt > 3000)
df_filtered <- df |>
na.omit() |>
filter(rt > 300 & rt < 3000)
# calculating remaining number and percentage of trials per subject
remaining_trials <- df_filtered |>
group_by(subject) |>
summarize(remaining_trials = n())
trial_summary <- cbind(total_trials, remaining_trials = (remaining_trials$remaining_trials))
trial_summary <- trial_summary |>
mutate(remaining_trials_per = remaining_trials/total_trials * 100)
trial_summary |>
summarize(
mean_remaining_trials_per = mean(remaining_trials_per),
sd_remaining_trials_per   = sd(remaining_trials_per))
# Saving filtered data
save(df_filtered, file = './filtered_data.rdata')
library(dplyr)
library(ggplot2)
library(ggdist)
library(lme4)
load('./filtered_data.rdata')
### DESCRIPTIVE STATISTICS -----------------------------------------------------
descriptives <- df_filtered |>
group_by(congruency, task, accuracy) |>
summarise(
mean_rt       = mean(rt),
sd_rt         = sd(rt))
# Descriptive plot for reaction time by congruency and task
ggplot(df_filtered, aes(x = congruency, y = rt, fill = accuracy, color = accuracy)) +
stat_halfeye(adjust = 0.5, justification = -0.1, .width = 0, alpha = 0.4) +
geom_boxplot(width = 0.1, alpha = 0.7) +
geom_jitter(width = 0.1, alpha = 0.4) +
geom_point(data = descriptives, aes(x = congruency, y = mean_rt), size = 4, color = "black") +
facet_wrap(~ task) +
labs(
title = "Raincloud plot of reaction time by congruency and task",
x     = "Congruency",
y     = "Reaction Time (RT)") +
theme_minimal()
